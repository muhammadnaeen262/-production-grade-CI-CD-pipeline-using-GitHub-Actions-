name: CI/CD Pipeline
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
env:
  IMAGE_NAME: mnaiem262/nodejs-app
  IMAGE_TAG: latest
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm test

      - name: Build Docker image
        run: docker build -t $IMAGE_NAME:$IMAGE_TAG .

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker image
        run: docker push $IMAGE_NAME:$IMAGE_TAG
  deploy:
    runs-on: self-hosted
    needs: build
    env:
      IMAGE_NAME: mnaiem262/nodejs-app
      IMAGE_TAG: latest
      CONTAINER_NAME: nodejs-app

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Deploy to production server
        run: |
          docker pull $IMAGE_NAME:$IMAGE_TAG
          docker stop $CONTAINER_NAME || true
          docker rm $CONTAINER_NAME || true
          docker run -d --name $CONTAINER_NAME -p 80:3000 $IMAGE_NAME:$IMAGE_TAG

      - name: Notify deployment
        run: echo "ðŸš€ Deployment to production server completed successfully."

    # runs-on: ubuntu-latest
    # needs: build
    # steps:
    #   - name: Checkout code
    #     uses: actions/checkout@v2

    #   - name: Deploy to production server
    #     run: |
    #       ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
    #       docker pull $IMAGE_NAME:$IMAGE_TAG
    #       docker stop nodejs-app || true
    #       docker rm nodejs-app || true
    #       docker run -d --name nodejs-app -p 80:3000 $IMAGE_NAME:$IMAGE_TAG
    #       EOF
    #     env:
    #       SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}